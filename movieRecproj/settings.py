"""
Django settings for movieRecproj project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import dj_database_url
from dotenv import load_dotenv
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
load_dotenv(os.path.join(BASE_DIR, ".env"))

SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

# API stuff
TMDB_API_KEY = os.getenv("TMDB_API_KEY")

TMDB_SEARCH_URL = 'https://api.themoviedb.org/3/search/movie'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# Security stuff
# SECURE_SSL_REDIRECT      = True 
# SESSION_COOKIE_SECURE    = True
# CSRF_COOKIE_SECURE       = True
# SECURE_HSTS_SECONDS      = 3600
# SECURE_BROWSER_XSS_FILTER= True

ALLOWED_HOSTS = [
    "localhost",
    "127.0.0.1"
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'movieRecommendationService',
    'corsheaders'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "https://movierecommendation-9vh1rf0o8-philip-rickeys-projects.vercel.app",
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",     
    "https://movierecommendation-9vh1rf0o8-philip-rickeys-projects.vercel.app",
]

CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = 'movieRecproj.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'movieRecproj.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.parse(
        os.environ["SUPABASE_DATABASE_URL"],
        conn_max_age=600, # Keep connection open for 10 mins
        ssl_require=True # require encryption
    )
}

# COMMADNS TO MAKE A REDIS DOCKER CONTAINER:

# 1. docker run --name movie-redis -p 6379:6379 -d redis:latest 
# 2. docker exec -it movie-redis redis-cli -n 1 FLUSHDB   

# Other notes:

# Combine both 

# redis configuration

""" No cache
CACHES = {

    # cache.get():
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://movie-redis:6379/1", # NEEDS TO POINT TO REDIS' DOCKER CONTAINER LOCALLY
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
        "TIMEOUT": 3600,
    }
}

"""


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
